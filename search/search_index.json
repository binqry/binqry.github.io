{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"binq binq is a light-weight software installer written in Golang. It downloads stuff querying an HTTP URL and extracts them if they are compressed. Especially, binq makes it easy to get stuff which is not provided by any package manager but has a download URL. Contents The documentation contains followings: Installation Guide for binq binary Quickstart to get Items by binq command More Usages of binq command Terminology System Requirements Pre-built binaries are available for macOS and Linux with x86-64 CPU architecture. binq is logically supposed to work on any machine for which Go can compile codes. Known issues: Installation process on Windows may not work. Installation Choose one of below methods: Homebrew or Linuxbrew (using Tap) Download from GitHub releases go get (go command is required) Description for each method follows. Homebrew (Linuxbrew) brew tap progrhyme/taps brew install binq Download Pre-built Binary The following script detects your OS and downloads the latest binq binary into your current directory: curl -s \"https://raw.githubusercontent.com/binqry/binq/master/get-binq.sh\" | bash Other versions are available on GitHub Releases . go get Just run this: go get github.com/binqry/binq/cmd/binq License The MIT License. Copyright \u00a9 2020 IKEDA Kiyoshi","title":"Home"},{"location":"#binq","text":"binq is a light-weight software installer written in Golang. It downloads stuff querying an HTTP URL and extracts them if they are compressed. Especially, binq makes it easy to get stuff which is not provided by any package manager but has a download URL.","title":"binq"},{"location":"#contents","text":"The documentation contains followings: Installation Guide for binq binary Quickstart to get Items by binq command More Usages of binq command Terminology","title":"Contents"},{"location":"#system-requirements","text":"Pre-built binaries are available for macOS and Linux with x86-64 CPU architecture. binq is logically supposed to work on any machine for which Go can compile codes. Known issues: Installation process on Windows may not work.","title":"System Requirements"},{"location":"#installation","text":"Choose one of below methods: Homebrew or Linuxbrew (using Tap) Download from GitHub releases go get (go command is required) Description for each method follows.","title":"Installation"},{"location":"#homebrew-linuxbrew","text":"brew tap progrhyme/taps brew install binq","title":"Homebrew (Linuxbrew)"},{"location":"#download-pre-built-binary","text":"The following script detects your OS and downloads the latest binq binary into your current directory: curl -s \"https://raw.githubusercontent.com/binqry/binq/master/get-binq.sh\" | bash Other versions are available on GitHub Releases .","title":"Download Pre-built Binary"},{"location":"#go-get","text":"Just run this: go get github.com/binqry/binq/cmd/binq","title":"go get"},{"location":"#license","text":"The MIT License. Copyright \u00a9 2020 IKEDA Kiyoshi","title":"License"},{"location":"cli-usage/","text":"CLI Usage of binq This page describes various usages of binq command. General Usage Syntax: binq [ install ] [ arguments... ] [ options... ] binq COMMAND [ arguments... ] [ options... ] binq -h | --help # Show general help Subcommands: binq install # (Default command) Install binary or archive item binq index # List Items on Index Server binq new # Create Item Manifest binq revise # Add/Edit/Delete a version in Item Manifest binq verify # Verify checksum of a version in Item Manifest binq register # Register/Update Item onto Local Index binq modify # Modify Item properties on Local Index binq deregister # Deregister Item from Local Index binq self-upgrade # Upgrade binq binary itself binq version # Show binq version Run binq COMMAND -h|--help to see reference of each subcommand. General Options: -h | --help # Show help -L, --log-level string # Log level (debug,info,notice,warn,error) Install \"Items\" An item means a stuff which can be installed by binq . See Quickstart for this use case. Self Upgrade binq self-upgrade is command to upgrade the executing binary itself when newer version is available. It uses the functionality of binq itself. It has a few command options but you will rarely need to specify either of them. List Items on \"Index Server\" Index Server serves dataset of multiple items. binq index is command to list items on an index server. Syntax: binq index [ -s | --server SERVER ] [ -o | --output FORMAT ] [ GENERAL_OPTIONS ] If you omit -s|--server option, https://binqry.github.io/index will be queried as default server. You can specify text or json as -o|--output option. Default is text . Create and Edit \"Item Manifests\" An item manifest is data which describes how to install the item. binq has several subcommands to create and edit item manifest files in the form of JSON. Create a Manifest binq new is command to create an item manifest. Syntax: binq new URL_FORMAT [ -v | --version VERSION ] [ -f | --file OUTPUT_FILE ] \\ [ -r | --replace REPLACEMENTS ] [ -e | --ext EXTENSIONS ] \\ [ -R | --rename RENAME_FILES ] [ GENERAL_OPTIONS ] Revise a version in a Manifest binq revise is command to add/edit/delete a version for the manifest. Syntax: # Add or Update Version in the Manifest binq revise MANIFEST_FILE [ -v | --version ] VERSION \\ [ -s | --sum CHECKSUMS ] [ -u | --url URL_FORMAT ] \\ [ -r | --replace REPLACEMENTS ] [ -e | --ext EXTENSIONS ] \\ [ -R | --rename RENAME_FILES ] [ --latest ] [ --no-latest ] [ -y | --yes ] \\ [ GENERAL_OPTIONS ] # Delete Version in the Manifest binq revise MANIFEST_FILE VERSION --delete [ -y | --yes ] [ GENERAL_OPTIONS ] In most cases, you won't need such options like --url , --replace and --rename because they rarely differs between versions. If the checksums of items are ambiguous, you can use following binq verify command. Verify a version in a Manifest binq verify is command to verify the checksum of a version of an item. It can also be used to generate SHA-256 checksum for the version. # Download a Version in the Manifest and Verify its checksum binq verify MANIFEST_FILE [ -v | --version VERSION ] [ --os OS ] \\ [ -a | --arch ARCH ] [ -y | --yes ] [ --keep ] [ GENERAL_OPTIONS ] Manipulate \"Index Dataset\" in Local File System Index Dataset is a dataset which holds multiple item manifests. binq has several subcommands to create and edit index dataset in local file system. Register or Update an Item on Index binq register is command to register or update an item manifest onto index dataset which is located in a directory. Syntax: binq register pato/to/root [ /index.json ] MANIFEST_FILE \\ [ -n | --name NAME ] [ -p | --path PATH ] [ -y | --yes ] [ GENERAL_OPTIONS ] The name of index data file must be index.json . When index.json does not exist, it will be created. If you want to change the name or path of a registered item, use following binq modify command. Modify an Item Info on Index binq modify is command to edit the properties of an item on index dataset. Syntax: binq modify pato/to/root [ /index.json ] NAME \\ [ -n | --name NEW_NAME ] [ -p | --path PATH ] [ -y | --yes ] [ GENERAL_OPTIONS ] This command has no functionality to edit the manifest itself. You should use binq revise or binq verify command for the purpose. Deregister an Item from Index binq deregister is command to remove an item from index dataset. Syntax: binq deregister pato/to/root [ /index.json ] NAME [ -y | --yes ] \\ [ GENERAL_OPTIONS ]","title":"CLI Usage"},{"location":"cli-usage/#cli-usage-of-binq","text":"This page describes various usages of binq command.","title":"CLI Usage of binq"},{"location":"cli-usage/#general-usage","text":"Syntax: binq [ install ] [ arguments... ] [ options... ] binq COMMAND [ arguments... ] [ options... ] binq -h | --help # Show general help Subcommands: binq install # (Default command) Install binary or archive item binq index # List Items on Index Server binq new # Create Item Manifest binq revise # Add/Edit/Delete a version in Item Manifest binq verify # Verify checksum of a version in Item Manifest binq register # Register/Update Item onto Local Index binq modify # Modify Item properties on Local Index binq deregister # Deregister Item from Local Index binq self-upgrade # Upgrade binq binary itself binq version # Show binq version Run binq COMMAND -h|--help to see reference of each subcommand. General Options: -h | --help # Show help -L, --log-level string # Log level (debug,info,notice,warn,error)","title":"General Usage"},{"location":"cli-usage/#install-items","text":"An item means a stuff which can be installed by binq . See Quickstart for this use case.","title":"Install \"Items\""},{"location":"cli-usage/#self-upgrade","text":"binq self-upgrade is command to upgrade the executing binary itself when newer version is available. It uses the functionality of binq itself. It has a few command options but you will rarely need to specify either of them.","title":"Self Upgrade"},{"location":"cli-usage/#list-items-on-index-server","text":"Index Server serves dataset of multiple items. binq index is command to list items on an index server. Syntax: binq index [ -s | --server SERVER ] [ -o | --output FORMAT ] [ GENERAL_OPTIONS ] If you omit -s|--server option, https://binqry.github.io/index will be queried as default server. You can specify text or json as -o|--output option. Default is text .","title":"List Items on \"Index Server\""},{"location":"cli-usage/#create-and-edit-item-manifests","text":"An item manifest is data which describes how to install the item. binq has several subcommands to create and edit item manifest files in the form of JSON.","title":"Create and Edit \"Item Manifests\""},{"location":"cli-usage/#create-a-manifest","text":"binq new is command to create an item manifest. Syntax: binq new URL_FORMAT [ -v | --version VERSION ] [ -f | --file OUTPUT_FILE ] \\ [ -r | --replace REPLACEMENTS ] [ -e | --ext EXTENSIONS ] \\ [ -R | --rename RENAME_FILES ] [ GENERAL_OPTIONS ]","title":"Create a Manifest"},{"location":"cli-usage/#revise-a-version-in-a-manifest","text":"binq revise is command to add/edit/delete a version for the manifest. Syntax: # Add or Update Version in the Manifest binq revise MANIFEST_FILE [ -v | --version ] VERSION \\ [ -s | --sum CHECKSUMS ] [ -u | --url URL_FORMAT ] \\ [ -r | --replace REPLACEMENTS ] [ -e | --ext EXTENSIONS ] \\ [ -R | --rename RENAME_FILES ] [ --latest ] [ --no-latest ] [ -y | --yes ] \\ [ GENERAL_OPTIONS ] # Delete Version in the Manifest binq revise MANIFEST_FILE VERSION --delete [ -y | --yes ] [ GENERAL_OPTIONS ] In most cases, you won't need such options like --url , --replace and --rename because they rarely differs between versions. If the checksums of items are ambiguous, you can use following binq verify command.","title":"Revise a version in a Manifest"},{"location":"cli-usage/#verify-a-version-in-a-manifest","text":"binq verify is command to verify the checksum of a version of an item. It can also be used to generate SHA-256 checksum for the version. # Download a Version in the Manifest and Verify its checksum binq verify MANIFEST_FILE [ -v | --version VERSION ] [ --os OS ] \\ [ -a | --arch ARCH ] [ -y | --yes ] [ --keep ] [ GENERAL_OPTIONS ]","title":"Verify a version in a Manifest"},{"location":"cli-usage/#manipulate-index-dataset-in-local-file-system","text":"Index Dataset is a dataset which holds multiple item manifests. binq has several subcommands to create and edit index dataset in local file system.","title":"Manipulate \"Index Dataset\" in Local File System"},{"location":"cli-usage/#register-or-update-an-item-on-index","text":"binq register is command to register or update an item manifest onto index dataset which is located in a directory. Syntax: binq register pato/to/root [ /index.json ] MANIFEST_FILE \\ [ -n | --name NAME ] [ -p | --path PATH ] [ -y | --yes ] [ GENERAL_OPTIONS ] The name of index data file must be index.json . When index.json does not exist, it will be created. If you want to change the name or path of a registered item, use following binq modify command.","title":"Register or Update an Item on Index"},{"location":"cli-usage/#modify-an-item-info-on-index","text":"binq modify is command to edit the properties of an item on index dataset. Syntax: binq modify pato/to/root [ /index.json ] NAME \\ [ -n | --name NEW_NAME ] [ -p | --path PATH ] [ -y | --yes ] [ GENERAL_OPTIONS ] This command has no functionality to edit the manifest itself. You should use binq revise or binq verify command for the purpose.","title":"Modify an Item Info on Index"},{"location":"cli-usage/#deregister-an-item-from-index","text":"binq deregister is command to remove an item from index dataset. Syntax: binq deregister pato/to/root [ /index.json ] NAME [ -y | --yes ] \\ [ GENERAL_OPTIONS ]","title":"Deregister an Item from Index"},{"location":"quickstart/","text":"Quickstart This page illustrates how to get stuff by binq command. We call them Items which are installed by binq. Command Syntax binq [ install ] [ -t | --target ] SOURCE [ @VERSION ] \\ [ -d | --dir OUTPUT_DIR ] [ -f | --file OUTFILE ] \\ [ -s | --server SERVER ] \\ [ -z | --no-extract ] [ -X | --no-exec ] \\ [ -L | --log-level LOG_LEVEL ] Install \"Items\" Basics First of all, you can specify full download URL for an item as SOURCE argument. binq https://github.com/peco/peco/releases/download/v0.5.7/peco_darwin_amd64.zip \\ -d path/to/bin export BINQ_BIN_DIR = path/to/bin binq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 \\ -f jq The default destination is current directory. It will be overridden by environment variable BINQ_BIN_DIR or command-line option -d|--dir . By default, binq finds executable files in archive and place them to destination. Therefore, binq can be a handy shortcut of curl and unzip (or tar xf or whatever). With \"Index Server\" Index Server of binq is an HTTP server which serves information of items . With index server , you can install items in more convenient and safer way. The default index server https://binqry.github.io/index holds data of some famous software. You can get them by following commands: binq mdbook binq jq@1.6 # installed as `jq` Because the item manifest of \"jq\" contains the output file name of \"jq\" binary, you don't need to specify -f|--file OUTFILE option in this case. Compare this behavior to previous example with direct download URL.","title":"Quickstart"},{"location":"quickstart/#quickstart","text":"This page illustrates how to get stuff by binq command. We call them Items which are installed by binq.","title":"Quickstart"},{"location":"quickstart/#command-syntax","text":"binq [ install ] [ -t | --target ] SOURCE [ @VERSION ] \\ [ -d | --dir OUTPUT_DIR ] [ -f | --file OUTFILE ] \\ [ -s | --server SERVER ] \\ [ -z | --no-extract ] [ -X | --no-exec ] \\ [ -L | --log-level LOG_LEVEL ]","title":"Command Syntax"},{"location":"quickstart/#install-items","text":"","title":"Install \"Items\""},{"location":"quickstart/#basics","text":"First of all, you can specify full download URL for an item as SOURCE argument. binq https://github.com/peco/peco/releases/download/v0.5.7/peco_darwin_amd64.zip \\ -d path/to/bin export BINQ_BIN_DIR = path/to/bin binq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 \\ -f jq The default destination is current directory. It will be overridden by environment variable BINQ_BIN_DIR or command-line option -d|--dir . By default, binq finds executable files in archive and place them to destination. Therefore, binq can be a handy shortcut of curl and unzip (or tar xf or whatever).","title":"Basics"},{"location":"quickstart/#with-index-server","text":"Index Server of binq is an HTTP server which serves information of items . With index server , you can install items in more convenient and safer way. The default index server https://binqry.github.io/index holds data of some famous software. You can get them by following commands: binq mdbook binq jq@1.6 # installed as `jq` Because the item manifest of \"jq\" contains the output file name of \"jq\" binary, you don't need to specify -f|--file OUTFILE option in this case. Compare this behavior to previous example with direct download URL.","title":"With \"Index Server\""},{"location":"terminology/","text":"Terminology This page explains the terminologies in this project. Index Index is a data which contains multiple (often a number of) item manifests . Index Dataset Index Dataset is a dataset which consists of one index and multiple items included in the index. Index Server Index Server is an HTTP server which serves index dataset . It responds with appropriate JSON content to incoming Get requests. The default index server for binq is https://binqry.github.io/index , which contains static index dataset as GitHub Pages. Item An Item means a stuff which can be installed by binq . Item Manifest An Item Manifest is an index data for an item which contains following information: URL Format to download the item Versions available for download Checksums to verify downloaded items Default Output File Names of files in the item","title":"Terminology"},{"location":"terminology/#terminology","text":"This page explains the terminologies in this project.","title":"Terminology"},{"location":"terminology/#index","text":"Index is a data which contains multiple (often a number of) item manifests .","title":"Index"},{"location":"terminology/#index-dataset","text":"Index Dataset is a dataset which consists of one index and multiple items included in the index.","title":"Index Dataset"},{"location":"terminology/#index-server","text":"Index Server is an HTTP server which serves index dataset . It responds with appropriate JSON content to incoming Get requests. The default index server for binq is https://binqry.github.io/index , which contains static index dataset as GitHub Pages.","title":"Index Server"},{"location":"terminology/#item","text":"An Item means a stuff which can be installed by binq .","title":"Item"},{"location":"terminology/#item-manifest","text":"An Item Manifest is an index data for an item which contains following information: URL Format to download the item Versions available for download Checksums to verify downloaded items Default Output File Names of files in the item","title":"Item Manifest"}]}